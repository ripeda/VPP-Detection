name: CI - Build

on:
  push:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  build:
    name: Build
    runs-on: macos-latest

    env:
      ORG_MAC_IDENTITY: ${{ secrets.ORG_MAC_IDENTITY }}
      # App Signing
      ORG_MAC_DEVELOPER_ID_APPLICATION_CERT_P12_BASE64: ${{ secrets.ORG_MAC_DEVELOPER_ID_APPLICATION_CERT_P12_BASE64 }}
      ORG_MAC_DEVELOPER_ID_APPLICATION_CERT_P12_PASSWORD: ${{ secrets.ORG_MAC_DEVELOPER_ID_APPLICATION_CERT_P12_PASSWORD }}
      # PKG Signing
      ORG_MAC_DEVELOPER_ID_INSTALLER_CERT_P12_BASE64: ${{ secrets.ORG_MAC_DEVELOPER_ID_INSTALLER_CERT_P12_BASE64 }}
      ORG_MAC_DEVELOPER_ID_INSTALLER_CERT_P12_PASSWORD: ${{ secrets.ORG_MAC_DEVELOPER_ID_INSTALLER_CERT_P12_PASSWORD }}
      # Notarization
      ORG_MAC_NOTARIZATION_TEAM_ID: ${{ secrets.ORG_MAC_NOTARIZATION_TEAM_ID }}
      ORG_MAC_NOTARIZATION_APPLE_ID: ${{ secrets.ORG_MAC_NOTARIZATION_APPLE_ID }}
      ORG_MAC_NOTARIZATION_PASSWORD: ${{ secrets.ORG_MAC_NOTARIZATION_PASSWORD }}

    steps:
      - uses: actions/checkout@v3

      - name: Import Application Signing Certificate
        uses: dhinakg/import-codesign-certs@master
        with:
          p12-file-base64: ${{ secrets.ORG_MAC_DEVELOPER_ID_APPLICATION_CERT_P12_BASE64 }}
          p12-password: ${{ secrets.ORG_MAC_DEVELOPER_ID_APPLICATION_CERT_P12_PASSWORD }}

      - name: Import Package Signing Certificate
        uses: dhinakg/import-codesign-certs@master
        with:
          p12-file-base64: ${{ secrets.ORG_MAC_DEVELOPER_ID_INSTALLER_CERT_P12_BASE64 }}
          p12-password: ${{ secrets.ORG_MAC_DEVELOPER_ID_INSTALLER_CERT_P12_PASSWORD }}

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: pip3 install -r requirements.txt

      - name: Build VPP Detect (Obj-C)
        run: python3 pkg.py --app_signing_identity "${{ env.ORG_MAC_IDENTITY }}" --pkg_signing_identity "${{ env.ORG_MAC_IDENTITY }}" --notarize_team_id "${{ env.ORG_MAC_NOTARIZATION_TEAM_ID }}" --notarize_apple_id "${{ env.ORG_MAC_NOTARIZATION_APPLE_ID }}" --notarize_password "${{ env.ORG_MAC_NOTARIZATION_PASSWORD }}"

      - name: Compress Packages
        run: |
          ditto -c -k --sequesterRsrc --keepParent 'vpp-detect' 'VPP Detection (Obj-C).zip'
          ditto -c -k --sequesterRsrc --keepParent 'Packaging/Install-VPP-Detect.pkg' 'VPP Detection (Obj-C).pkg.zip'
          ditto -c -k --sequesterRsrc --keepParent 'Packaging/Uninstall-VPP-Detect.pkg' 'VPP Detection Uninstall (Obj-C).pkg.zip'
          ditto -c -k --sequesterRsrc --keepParent 'vpp-detect.sh' 'VPP Detection (ZSH).zip'

      - name: Upload VPP Detect (Obj-C) (artifact)
        uses: actions/upload-artifact@v2
        with:
            name: VPP Detection (Obj-C)
            path: VPP Detection (Obj-C).zip

      - name: Upload VPP Detect (ZSH) (artifact)
        uses: actions/upload-artifact@v2
        with:
            name: VPP Detection (ZSH)
            path: VPP Detection (ZSH).zip

      - name: Upload VPP Detection (Obj-C) (pkg) (artifact)
        uses: actions/upload-artifact@v2
        with:
            name: VPP Detection (Obj-C) (pkg)
            path: VPP Detection (Obj-C).pkg.zip

      - name: Upload VPP Detection Uninstall (Obj-C) (pkg) (artifact)
        uses: actions/upload-artifact@v2
        with:
            name: VPP Detection Uninstall (Obj-C) (pkg)
            path: VPP Detection Uninstall (Obj-C).pkg.zip

      - name: Upload VPP Detect (Obj-C) (on release)
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: VPP Detection (Obj-C).zip
          tag: ${{ github.ref }}
          file_glob: true

      - name: Upload VPP Detection (ZSH) (on release)
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: VPP Detection (ZSH).zip
          tag: ${{ github.ref }}
          file_glob: true


      - name: Upload VPP Detection (Obj-C) (pkg) (on release)
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: VPP Detection (Obj-C).pkg.zip
          tag: ${{ github.ref }}
          file_glob: true

      - name: Upload VPP Detection Uninstall (Obj-C) (pkg) (on release)
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: VPP Detection Uninstall (Obj-C).pkg.zip
          tag: ${{ github.ref }}
          file_glob: true